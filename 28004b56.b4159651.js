(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{131:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return b}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=a.a.createContext({}),p=function(e){var n=a.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return a.a.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},d=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(t),d=r,b=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return t?a.a.createElement(b,i(i({ref:n},l),{},{components:t})):a.a.createElement(b,i({ref:n},l))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=d;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var l=2;l<o;l++)s[l]=t[l];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},80:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return s})),t.d(n,"metadata",(function(){return i})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return p}));var r=t(3),a=t(7),o=(t(0),t(131)),s={title:"CHANGELOG",slug:"/changelog"},i={unversionedId:"17_CHANGELOG",id:"17_CHANGELOG",isDocsHomePage:!1,title:"CHANGELOG",description:"0.2.0",source:"@site/docs/17_CHANGELOG.md",slug:"/changelog",permalink:"/symfony-boilerplate/docs/changelog",editUrl:"https://github.com/thecodingmachine/symfony-boilerplate/tree/master/docs/docs/17_CHANGELOG.md",version:"current",sidebar:"docs",previous:{title:"LogRocket",permalink:"/symfony-boilerplate/docs/deployments/logrocket"}},c=[{value:"0.2.0",id:"020",children:[{value:"API",id:"api",children:[]},{value:"Web Application",id:"web-application",children:[]}]},{value:"0.1.1",id:"011",children:[{value:"API",id:"api-1",children:[]}]}],l={rightToc:c};function p(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"020"},"0.2.0"),Object(o.b)("h3",{id:"api"},"API"),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"\ud83d\udce3","\xa0","\xa0","All commands have to be run in the ",Object(o.b)("inlineCode",{parentName:"p"},"api")," service (",Object(o.b)("inlineCode",{parentName:"p"},"make api"),")."))),Object(o.b)("p",null,"Update Symfony from version ",Object(o.b)("inlineCode",{parentName:"p"},"5.1")," to ",Object(o.b)("inlineCode",{parentName:"p"},"5.2")," by following\nthe ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://symfony.com/doc/current/setup/upgrade_minor.html"}),"Upgrading a Minor Version")," guide."),Object(o.b)("p",null,"Once done, run the following commands:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash",metastring:'title="console"',title:'"console"'}),"composer update\nphp bin/console tdbm:generate\ncomposer require ecodev/graphql-upload ^5\n")),Object(o.b)("p",null,"And delete the ",Object(o.b)("em",{parentName:"p"},"src/api/src/Domain/ResultIterator")," folder."),Object(o.b)("p",null,"In order to find the last outdated dependencies, run ",Object(o.b)("inlineCode",{parentName:"p"},"composer outdated --direct"),":"),Object(o.b)("hr",null),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"fzaninotto/faker"),":"),Object(o.b)("p",null,"Replace this dependency with ",Object(o.b)("inlineCode",{parentName:"p"},"fakerphp/faker"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash",metastring:'title="console"',title:'"console"'}),"composer remove fzaninotto/faker\ncomposer require --dev fakerphp/faker\n")),Object(o.b)("hr",null),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"sensiolabs-de/deptrac-shim"),":"),Object(o.b)("p",null,"In the ",Object(o.b)("inlineCode",{parentName:"p"},"require-dev")," section from the ",Object(o.b)("em",{parentName:"p"},"src/api/composer.json")," file, replace:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json",metastring:'title="src/api/composer.json"',title:'"src/api/composer.json"'}),'"sensiolabs-de/deptrac-shim": "^0.8.2",\n')),Object(o.b)("p",null,"By:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json",metastring:'title="src/api/composer.json"',title:'"src/api/composer.json"'}),'"sensiolabs-de/deptrac-shim": "^0.10.2",\n')),Object(o.b)("p",null,"And run ",Object(o.b)("inlineCode",{parentName:"p"},"composer update"),"."),Object(o.b)("hr",null),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"league/flysystem-aws-s3-v3")," & ",Object(o.b)("inlineCode",{parentName:"p"},"league/flysystem-memory"),":"),Object(o.b)("p",null,"At the time of writing, the Symfony Bundle is not yet ready for version ",Object(o.b)("inlineCode",{parentName:"p"},"2.0.0"),":"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/thephpleague/flysystem-bundle/pull/59"}),"https://github.com/thephpleague/flysystem-bundle/pull/59"))),Object(o.b)("hr",null),Object(o.b)("p",null,"Now most of the dependencies are up-to-date."),Object(o.b)("p",null,"Yet, we have to update the Symfony recipes:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash",metastring:'title="console"',title:'"console"'}),"composer recipes\n")),Object(o.b)("hr",null),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"doctrine/doctrine-bundle"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash",metastring:'title="console"',title:'"console"'}),"composer recipes:install doctrine/doctrine-bundle --force -v\n")),Object(o.b)("p",null,"Once done, replace the content of the following files:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml",metastring:'title="src/api/config/packages/doctrine.yaml"',title:'"src/api/config/packages/doctrine.yaml"'}),"doctrine:\n    dbal:\n        url: '%env(resolve:DATABASE_URL)%'\n\n        # IMPORTANT: You MUST configure your server version,\n        # either here or in the DATABASE_URL env var (see .env file)\n        #server_version: '13'\n#    orm:\n#        auto_generate_proxy_classes: true\n#        naming_strategy: doctrine.orm.naming_strategy.underscore_number_aware\n#        auto_mapping: true\n#        mappings:\n#            App:\n#                is_bundle: false\n#                type: annotation\n#                dir: '%kernel.project_dir%/src/Entity'\n#                prefix: 'App\\Entity'\n#                alias: App\n\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-xml",metastring:'title="src/api/phpunit.xml.dist"',title:'"src/api/phpunit.xml.dist"'}),'<?xml version="1.0" encoding="UTF-8"?>\n\n\x3c!-- https://phpunit.readthedocs.io/en/latest/configuration.html --\x3e\n<phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:noNamespaceSchemaLocation="vendor/phpunit/phpunit/phpunit.xsd"\n         backupGlobals="false"\n         colors="true"\n         bootstrap="tests/bootstrap.php"\n>\n\n    <php>\n        <ini name="error_reporting" value="-1" />\n        <server name="APP_ENV" value="test" force="true" />\n        <server name="SHELL_VERBOSITY" value="-1" />\n        <server name="KERNEL_CLASS" value="App\\Kernel" />\n        <server name="STORAGE_PUBLIC_SOURCE" value="public.storage.memory" force="true" />\n        <server name="STORAGE_PRIVATE_SOURCE" value="private.storage.memory" force="true" />\n    </php>\n\n    <testsuites>\n        <testsuite name="Project Test Suite">\n            <directory>tests</directory>\n        </testsuite>\n    </testsuites>\n\n    <filter>\n        <whitelist processUncoveredFilesFromWhitelist="true">\n            <directory suffix=".php">src</directory>\n            <exclude>\n                <directory>src/Kernel.php</directory>\n                <directory>src/Domain/Model/Generated</directory>\n                <directory>src/Domain/Dao/Generated</directory>\n                <directory>src/Domain/ResultIterator/Generated</directory>\n                <directory>src/Infrastructure/Command/DevFixturesCommand.php</directory>\n                <directory>src/Infrastructure/Command/InitializeMinIOStorageCommand.php</directory>\n                <directory>src/Infrastructure/EventSubscriber</directory>\n                <directory>src/Infrastructure/Fixtures</directory>\n                <directory>src/Infrastructure/S3</directory>\n            </exclude>\n        </whitelist>\n    </filter>\n\n    <logging>\n        <log type="coverage-html" target="coverage"/>\n        <log type="coverage-text" target="php://stdout"/>\n    </logging>\n</phpunit>\n')),Object(o.b)("p",null,"And remove the ",Object(o.b)("em",{parentName:"p"},"src/api/src/Entity")," and ",Object(o.b)("em",{parentName:"p"},"src/api/src/Repository")," folders."),Object(o.b)("hr",null),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"phpunit/phpunit"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash",metastring:'title="console"',title:'"console"'}),"composer recipes:install phpunit/phpunit --force -v\n")),Object(o.b)("p",null,"Once done, replace the content of the following files:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-xml",metastring:'title="src/api/phpunit.xml.dist"',title:'"src/api/phpunit.xml.dist"'}),'<?xml version="1.0" encoding="UTF-8"?>\n\n\x3c!-- https://phpunit.readthedocs.io/en/latest/configuration.html --\x3e\n<phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:noNamespaceSchemaLocation="vendor/phpunit/phpunit/phpunit.xsd"\n         backupGlobals="false"\n         colors="true"\n         bootstrap="tests/bootstrap.php"\n>\n\n    <php>\n        <ini name="error_reporting" value="-1" />\n        <server name="APP_ENV" value="test" force="true" />\n        <server name="SHELL_VERBOSITY" value="-1" />\n        <server name="KERNEL_CLASS" value="App\\Kernel" />\n        <server name="STORAGE_PUBLIC_SOURCE" value="public.storage.memory" force="true" />\n        <server name="STORAGE_PRIVATE_SOURCE" value="private.storage.memory" force="true" />\n    </php>\n\n    <testsuites>\n        <testsuite name="Project Test Suite">\n            <directory>tests</directory>\n        </testsuite>\n    </testsuites>\n\n    <filter>\n        <whitelist processUncoveredFilesFromWhitelist="true">\n            <directory suffix=".php">src</directory>\n            <exclude>\n                <directory>src/Kernel.php</directory>\n                <directory>src/Domain/Model/Generated</directory>\n                <directory>src/Domain/Dao/Generated</directory>\n                <directory>src/Domain/ResultIterator/Generated</directory>\n                <directory>src/Infrastructure/Command/DevFixturesCommand.php</directory>\n                <directory>src/Infrastructure/Command/InitializeMinIOStorageCommand.php</directory>\n                <directory>src/Infrastructure/EventSubscriber</directory>\n                <directory>src/Infrastructure/Fixtures</directory>\n                <directory>src/Infrastructure/S3</directory>\n            </exclude>\n        </whitelist>\n    </filter>\n\n    <logging>\n        <log type="coverage-html" target="coverage"/>\n        <log type="coverage-text" target="php://stdout"/>\n    </logging>\n</phpunit>\n')),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-php",metastring:'title="src/api/tests/bootstrap.php"',title:'"src/api/tests/bootstrap.php"'}),"<?php\n\ndeclare(strict_types=1);\n\nuse Symfony\\Component\\Dotenv\\Dotenv;\nuse Symfony\\Component\\Process\\Process;\n\nrequire dirname(__DIR__) . '/vendor/autoload.php';\n\nif (file_exists(dirname(__DIR__) . '/config/bootstrap.php')) {\n    require dirname(__DIR__) . '/config/bootstrap.php';\n} elseif (method_exists(Dotenv::class, 'bootEnv')) {\n    (new Dotenv())->bootEnv(dirname(__DIR__) . '/.env');\n}\n\n/** @var Process[] $processes */\n$processes = [\n    // Delete the \"tests\" database.\n    new Process(['php', 'bin/console', 'doctrine:database:drop', '-n', '--force', '--if-exists']),\n    // Create the \"tests\" database.\n    new Process(['php', 'bin/console', 'doctrine:database:create', '-n', '--if-not-exists']),\n    // Initialize the \"tests\" database structure.\n    new Process(['php', 'bin/console', 'doctrine:migrations:migrate', '-n']),\n    // Clear the cache.\n    new Process(['php', 'bin/console', 'cache:clear', '--no-warmup']),\n];\n\nforeach ($processes as $process) {\n    $process->run();\n    if (! $process->isSuccessful()) {\n        throw new RuntimeException(\n            $process->getCommandLine() .\n            ': ' .\n            $process->getExitCode() .\n            ' ' .\n            $process->getExitCodeText() .\n            ' ' .\n            $process->getErrorOutput()\n        );\n    }\n}\n")),Object(o.b)("p",null,"And remove the ",Object(o.b)("em",{parentName:"p"},"src/api/.env.test")," file."),Object(o.b)("hr",null),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"symfony/framework-bundle"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash",metastring:'title="console"',title:'"console"'}),"composer recipes:install symfony/framework-bundle --force -v\n")),Object(o.b)("p",null,"Once done, replace the content of the following files:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-xml",metastring:'title="src/api/phpunit.xml.dist"',title:'"src/api/phpunit.xml.dist"'}),'<?xml version="1.0" encoding="UTF-8"?>\n\n\x3c!-- https://phpunit.readthedocs.io/en/latest/configuration.html --\x3e\n<phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:noNamespaceSchemaLocation="vendor/phpunit/phpunit/phpunit.xsd"\n         backupGlobals="false"\n         colors="true"\n         bootstrap="tests/bootstrap.php"\n>\n\n    <php>\n        <ini name="error_reporting" value="-1" />\n        <server name="APP_ENV" value="test" force="true" />\n        <server name="SHELL_VERBOSITY" value="-1" />\n        <server name="KERNEL_CLASS" value="App\\Kernel" />\n        <server name="STORAGE_PUBLIC_SOURCE" value="public.storage.memory" force="true" />\n        <server name="STORAGE_PRIVATE_SOURCE" value="private.storage.memory" force="true" />\n    </php>\n\n    <testsuites>\n        <testsuite name="Project Test Suite">\n            <directory>tests</directory>\n        </testsuite>\n    </testsuites>\n\n    <filter>\n        <whitelist processUncoveredFilesFromWhitelist="true">\n            <directory suffix=".php">src</directory>\n            <exclude>\n                <directory>src/Kernel.php</directory>\n                <directory>src/Domain/Model/Generated</directory>\n                <directory>src/Domain/Dao/Generated</directory>\n                <directory>src/Domain/ResultIterator/Generated</directory>\n                <directory>src/Infrastructure/Command/DevFixturesCommand.php</directory>\n                <directory>src/Infrastructure/Command/InitializeMinIOStorageCommand.php</directory>\n                <directory>src/Infrastructure/EventSubscriber</directory>\n                <directory>src/Infrastructure/Fixtures</directory>\n                <directory>src/Infrastructure/S3</directory>\n            </exclude>\n        </whitelist>\n    </filter>\n\n    <logging>\n        <log type="coverage-html" target="coverage"/>\n        <log type="coverage-text" target="php://stdout"/>\n    </logging>\n</phpunit>\n')),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml",metastring:'title="src/api/config/services.yaml"',title:'"src/api/config/services.yaml"'}),"# This file is the entry point to configure your own services.\n# Files in the packages/ subdirectory configure your dependencies.\n\n# Put parameters here that don't need to change on each machine where the app is deployed\n# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration\nparameters:\n    # Parameters are values which are used directly in the code.\n    app.storage_public_source: '%env(STORAGE_PUBLIC_SOURCE)%'\n    app.storage_private_source: '%env(STORAGE_PRIVATE_SOURCE)%'\n    app.storage_public_bucket: '%env(STORAGE_PUBLIC_BUCKET)%'\n    app.storage_private_bucket: '%env(STORAGE_PRIVATE_BUCKET)%'\n    app.mail_title: '%env(APP_NAME)%'\n    app.mail_from_address: '%env(MAIL_FROM_ADDRESS)%'\n    app.mail_from_name: '%env(MAIL_FROM_NAME)%'\n    app.mail_webapp_url: '%env(MAIL_WEBAPP_URL)%'\n    app.mail_webapp_update_password_route_format: '%env(MAIL_WEBAPP_UPDATE_PASSWORD_ROUTE_FORMAT)%'\n\nservices:\n    # default configuration for services in *this* file\n    _defaults:\n        autowire: true      # Automatically injects dependencies in your services.\n        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.\n\n    # makes classes in src/ available to be used as services\n    # this creates a service per class whose id is the fully-qualified class name\n    App\\:\n        resource: '../src/'\n        exclude:\n            - '../src/Domain/{Throwable,Model}'\n            - '../src/Infrastructure/S3'\n            - '../src/Kernel.php'\n            - '../src/Tests/'\n\n    # controllers are imported separately to make sure services can be injected\n    # as action arguments even if you don't extend any base controller class\n    App\\Infrastructure\\Controller\\:\n        resource: '../src/Infrastructure/Controller'\n        tags: ['controller.service_arguments']\n\n    # add more service definitions when explicit configuration is needed\n    # please note that last definitions always *replace* previous ones\n    Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\PdoSessionHandler:\n        arguments:\n            - '%env(DATABASE_URL)%'\n\n    App\\Infrastructure\\Command\\InitializeS3StorageCommand:\n        arguments:\n            - '@s3.client'\n\n    App\\Infrastructure\\EventListener\\FileNotFoundExceptionListener:\n        tags:\n            - { name: kernel.event_listener, event: kernel.exception }\n\n    App\\Infrastructure\\EventListener\\NoBeanFoundExceptionListener:\n        tags:\n            - { name: kernel.event_listener, event: kernel.exception }\n\n    App\\Infrastructure\\EventSubscriber\\LocaleSubscriber:\n        arguments:\n            - '%kernel.default_locale%'\n\n    # A special kind of formatter that logs the stack traces (otherwise, Symfony logs do not contain stack traces).\n    formatterWithStackTrace:\n        class: Monolog\\Formatter\\LineFormatter\n        calls:\n            - [includeStacktraces]\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-gitignore",metastring:'title="src/api/.gitignore"',title:'"src/api/.gitignore"'}),"/coverage\n\n###> symfony/framework-bundle ###\n/.env.local\n/.env.local.php\n/.env.*.local\n/config/secrets/prod/prod.decrypt.private.php\n/public/bundles/\n/var/\n/vendor/\n###< symfony/framework-bundle ###\n\n###> squizlabs/php_codesniffer ###\n/.phpcs-cache\n/phpcs.xml\n###< squizlabs/php_codesniffer ###\n\n###> phpunit/phpunit ###\n/phpunit.xml\n.phpunit.result.cache\n###< phpunit/phpunit ###\n\n###> sensiolabs-de/deptrac-shim ###\n/.deptrac.cache\n###< sensiolabs-de/deptrac-shim ###\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml",metastring:'title="src/api/config/packages/framework.yaml"',title:'"src/api/config/packages/framework.yaml"'}),"# see https://symfony.com/doc/current/reference/configuration/framework.html\nframework:\n    secret: '%env(APP_SECRET)%'\n    #csrf_protection: true\n    #http_method_override: true\n\n    # Enables session support. Note that the session will ONLY be started if you read or write from it.\n    # Remove or comment this section to explicitly disable session support.\n    session:\n        handler_id: Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\PdoSessionHandler\n        cookie_secure: auto\n        #cookie_samesite: lax # CORS requests and SameSite cookies issue: https://github.com/whatwg/fetch/issues/769.\n        cookie_samesite: null\n        cookie_domain: '%env(COOKIE_DOMAIN)%'\n\n    #esi: true\n    #fragments: true\n    php_errors:\n        log: true\n\n")),Object(o.b)("p",null,"And remove the ",Object(o.b)("em",{parentName:"p"},"src/api/src/Controller")," folder."),Object(o.b)("hr",null),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"symfony/messenger"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash",metastring:'title="console"',title:'"console"'}),"composer recipes:install symfony/messenger --force -v\n")),Object(o.b)("p",null,"Once done, replace the content of the following file:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml",metastring:'title="src/api/config/packages/messenger.yaml"',title:'"src/api/config/packages/messenger.yaml"'}),"framework:\n    messenger:\n        # Uncomment this (and the failed transport below) to send failed messages to this transport for later handling.\n        # failure_transport: failed\n\n        transports:\n            # https://symfony.com/doc/current/messenger.html#transport-configuration\n            async: '%env(MESSENGER_TRANSPORT_DSN)%'\n            # failed: 'doctrine://default?queue_name=failed'\n            # sync: 'sync://'\n\n        routing:\n            # Route your messages to the transports\n            # 'App\\Message\\YourMessage': async\n            'App\\UseCase\\AsyncTask': async\n            'Symfony\\Component\\Mailer\\Messenger\\SendEmailMessage': async\n\n")),Object(o.b)("h3",{id:"web-application"},"Web Application"),Object(o.b)("p",null,"Replace the content of the following file:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json",metastring:'title="src/webapp/package.json"',title:'"src/webapp/package.json"'}),'{\n  "name": "symfony-boilerplate",\n  "version": "1.0.0",\n  "private": true,\n  "scripts": {\n    "dev": "nuxt",\n    "build": "nuxt build",\n    "start": "nuxt start",\n    "export": "nuxt export",\n    "serve": "nuxt serve",\n    "lint:js": "eslint --ext .js,.vue --ignore-path .gitignore .",\n    "lint:style": "stylelint **/*.{vue,css} --ignore-path .gitignore",\n    "lint:fix": "eslint --fix --ext .js,.vue --ignore-path .gitignore .",\n    "lint": "yarn lint:js && yarn lint:style"\n  },\n  "dependencies": {\n    "@nuxtjs/toast": "^3.3.1",\n    "bootstrap-vue": "^2.20.1",\n    "cookie-universal-nuxt": "^2.1.4",\n    "graphql": "^15.3.0",\n    "graphql-tag": "^2.11.0",\n    "nuxt": "^2.14.10",\n    "nuxt-graphql-request": "^3.1.2",\n    "nuxt-i18n": "^6.15.1",\n    "nuxt-logrocket": "^1.2.10"\n  },\n  "devDependencies": {\n    "@babel/runtime-corejs3": "^7.10.3",\n    "@nuxtjs/eslint-config": "^5.0.0",\n    "@nuxtjs/eslint-module": "^3.0.2",\n    "@nuxtjs/stylelint-module": "^4.0.0",\n    "babel-eslint": "^10.1.0",\n    "core-js": "3",\n    "eslint": "^7.2.0",\n    "eslint-config-prettier": "^7.0.0",\n    "eslint-plugin-nuxt": "^2.0.0",\n    "eslint-plugin-prettier": "^3.1.4",\n    "node-sass": "^5.0.0",\n    "prettier": "^2.0.5",\n    "sass-loader": "^10.0.2",\n    "stylelint": "^13.6.1",\n    "stylelint-config-prettier": "^8.0.1",\n    "stylelint-config-standard": "^20.0.0"\n  }\n}\n')),Object(o.b)("p",null,"Remove the file ",Object(o.b)("em",{parentName:"p"},"src/webapp/yarn.lock")," and the folder ",Object(o.b)("em",{parentName:"p"},"src/webapp/node_modules"),",\nbefore recreating the ",Object(o.b)("inlineCode",{parentName:"p"},"webapp")," service with ",Object(o.b)("inlineCode",{parentName:"p"},"docker-compose up -d --force webapp"),"."),Object(o.b)("p",null,"Enter the ",Object(o.b)("inlineCode",{parentName:"p"},"webapp")," service (",Object(o.b)("inlineCode",{parentName:"p"},"make webapp"),") and run ",Object(o.b)("inlineCode",{parentName:"p"},"yarn lint:fix"),"."),Object(o.b)("h2",{id:"011"},"0.1.1"),Object(o.b)("h3",{id:"api-1"},"API"),Object(o.b)("p",null,"Method ",Object(o.b)("inlineCode",{parentName:"p"},"createResponseWithXLSXAttachment")," from ",Object(o.b)("inlineCode",{parentName:"p"},"DownloadXLSXController")," class did not delete the temporary file in\ncase of exception:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-php",metastring:'title="src/api/src/Infrastructure/Controller/DownloadXLSXController.php"',title:'"src/api/src/Infrastructure/Controller/DownloadXLSXController.php"'}),"$tmpFilename = Uuid::uuid4()->toString() . '.xlsx';\n$xlsx->save($tmpFilename);\n$fileContent = file_get_contents($tmpFilename); // Get the file content.\nunlink($tmpFilename); // Delete the file.\n\nreturn $this->createResponseWithAttachment(\n    $filename,\n    $fileContent\n);\n")),Object(o.b)("p",null,"We now make sure it does:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-php",metastring:'title="src/api/src/Infrastructure/Controller/DownloadXLSXController.php"',title:'"src/api/src/Infrastructure/Controller/DownloadXLSXController.php"'}),"try {\n    $tmpFilename = Uuid::uuid4()->toString() . '.xlsx';\n    $xlsx->save($tmpFilename);\n    $fileContent = file_get_contents($tmpFilename); // Get the file content.\n} finally {\n    if (file_exists($tmpFilename)) {\n        unlink($tmpFilename); // Delete the file.\n    }\n}\n\nreturn $this->createResponseWithAttachment(\n    $filename,\n    $fileContent\n);\n")))}p.isMDXComponent=!0}}]);