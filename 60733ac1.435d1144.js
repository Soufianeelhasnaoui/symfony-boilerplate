(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{69:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return i})),r.d(t,"rightToc",(function(){return l})),r.d(t,"default",(function(){return u}));var n=r(2),a=r(6),s=(r(0),r(91)),o={title:"Lists",slug:"/guides/lists"},i={unversionedId:"5_Guides/5_5_Lists",id:"5_Guides/5_5_Lists",isDocsHomePage:!1,title:"Lists",description:"API",source:"@site/docs/5_Guides/5_5_Lists.md",slug:"/guides/lists",permalink:"/symfony-boilerplate/docs/guides/lists",editUrl:"https://github.com/thecodingmachine/symfony-boilerplate/docs/5_Guides/5_5_Lists.md",version:"current",sidebar:"docs",previous:{title:"Validation",permalink:"/symfony-boilerplate/docs/guides/validation"},next:{title:"Emails",permalink:"/symfony-boilerplate/docs/guides/emails"}},l=[{value:"API",id:"api",children:[{value:"Use case and result iterator",id:"use-case-and-result-iterator",children:[]},{value:"Enumerators",id:"enumerators",children:[]}]},{value:"Web application",id:"web-application",children:[]}],c={rightToc:l};function u(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(s.b)("wrapper",Object(n.a)({},c,r,{components:t,mdxType:"MDXLayout"}),Object(s.b)("h2",{id:"api"},"API"),Object(s.b)("h3",{id:"use-case-and-result-iterator"},"Use case and result iterator"),Object(s.b)("p",null,"It starts by creating a use case. For instance, ",Object(s.b)("em",{parentName:"p"},"src/api/src/UseCase/User/GetUsers.php"),"."),Object(s.b)("p",null,"Your use case have to return a ",Object(s.b)("inlineCode",{parentName:"p"},"ResultIterator")," to paginate efficiently your results.\nLet's take a look at the GraphQL query for the ",Object(s.b)("inlineCode",{parentName:"p"},"GetUsers")," use case:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-graphql",metastring:'title="GraphQL query"',title:'"GraphQL','query"':!0}),"query users($search: String, $role: Role, $sortBy: UsersSortBy, $sortOrder: SortOrder, $limit: Int!, $offset: Int!) {\n  users(search: $search, role: $role, sortBy: $sortBy, sortOrder: $sortOrder) {\n    items(limit: $limit, offset: $offset) {\n      id\n      firstName\n      lastName\n      email\n      locale\n      role\n    }\n    count\n  }\n}\n")),Object(s.b)("p",null,"The ",Object(s.b)("inlineCode",{parentName:"p"},"limit")," and ",Object(s.b)("inlineCode",{parentName:"p"},"offset")," parameters from the ",Object(s.b)("inlineCode",{parentName:"p"},"items")," part do not exist in the use case parameters;\nit is the ",Object(s.b)("inlineCode",{parentName:"p"},"ResultIterator")," that takes these parameters."),Object(s.b)("p",null,"Also, note the ",Object(s.b)("inlineCode",{parentName:"p"},"count")," value; that's the total of items."),Object(s.b)("p",null,"We will see later how to use these values to create a pagination on the web application."),Object(s.b)("h3",{id:"enumerators"},"Enumerators"),Object(s.b)("p",null,'For "sort by" and "sort order" values, we use enumerators (see ',Object(s.b)("em",{parentName:"p"},"src/api/src/Domain/Enum/Filter")," folder)."),Object(s.b)("p",null,"GraphQLite recognizes an enumerator as a valid value for your GraphQL request."),Object(s.b)("p",null,"Each enumerator's key (i.e., ",Object(s.b)("inlineCode",{parentName:"p"},"FIRST_NAME"),") is a GraphQL value, while each enumerator's value (i.e., ",Object(s.b)("inlineCode",{parentName:"p"},"first_name"),")\nis a valid SQL expression. "),Object(s.b)("p",null,"For instance:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-graphql",metastring:'title="GraphQL query"',title:'"GraphQL','query"':!0}),'users(search: "foo", role: ADMINISTATOR, sortBy: LAST_NAME, sortOrder: DESC) {\n  items(limit: 10, offset: 0) {\n    id\n    firstName\n    lastName\n    email\n    locale\n    role\n  }\n  count\n}\n')),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-php",metastring:'title="src/api/src/UseCase/User/GetUsers.php"',title:'"src/api/src/UseCase/User/GetUsers.php"'}),"/**\n * @return User[]|ResultIterator\n *\n * @Query\n * @Logged\n * @Security(\"is_granted('ROLE_ADMINISTRATOR')\")\n */\npublic function users(\n    ?string $search = null,\n    ?Role $role = null,\n    ?UsersSortBy $sortBy = null,\n    ?SortOrder $sortOrder = null\n): ResultIterator {\n    return $this->userDao->search(\n        $search,\n        $role,\n        $sortBy,\n        $sortOrder\n    );\n}\n")),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-php",metastring:'title="src/api/src/Domain/Dao/UserDao.php"',title:'"src/api/src/Domain/Dao/UserDao.php"'}),"/**\n * @return User[]|ResultIterator\n */\npublic function search(\n    ?string $search = null,\n    ?Role $role = null,\n    ?UsersSortBy $sortBy = null,\n    ?SortOrder $sortOrder = null\n): ResultIterator {\n    $sortBy    = $sortBy ?: UsersSortBy::FIRST_NAME();\n    $sortOrder = $sortOrder ?: SortOrder::ASC();\n\n    return $this->find(\n        [\n            'first_name LIKE :search OR last_name LIKE :search OR email LIKE :search',\n            'role = :role',\n        ],\n        [\n            'search' => '%' . $search . '%',\n            'role' => $role,\n        ],\n        $sortBy . ' ' . $sortOrder\n    );\n}\n")),Object(s.b)("h2",{id:"web-application"},"Web application"),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"IF default TEXT filters === null, it will refresh the page the first time!!")),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"CLIENT need to try catch and call this.$nuxt.error\nSERVER need to try catch and call context.error")))}u.isMDXComponent=!0},91:function(e,t,r){"use strict";r.d(t,"a",(function(){return p})),r.d(t,"b",(function(){return m}));var n=r(0),a=r.n(n);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=a.a.createContext({}),u=function(e){var t=a.a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(r),d=n,m=p["".concat(o,".").concat(d)]||p[d]||b[d]||s;return r?a.a.createElement(m,i(i({ref:t},c),{},{components:r})):a.a.createElement(m,i({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,o=new Array(s);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var c=2;c<s;c++)o[c]=r[c];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);